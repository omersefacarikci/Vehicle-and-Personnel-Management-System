<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>